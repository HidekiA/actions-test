name: sam deploy

on:
  workflow_call:
    inputs:
      CREATE_CHANGESET:
        required: false
        type: boolean
        default: false
      DEPLOY:
        required: false
        type: boolean
        default: false
      STACK_NAME:
        required: true
        type: string
      TEMPLATE_FILE_NAME:
        required: false
        type: string
        default: template.yml
      WORKING_DIRECTORY:
        required: true
        type: string
      AWS_REGION:
        required: false
        type: string
        default: ap-northeast-1
      SAM_CAPABILITIES:
        required: false
        type: string
        default: CAPABILITY_IAM
    secrets:
      ACTION_ROLE:
        required: true
      DEPLOY_ROLE:
        required: true
      TEMPLATE_BUCKET:
        required: true
      AWS_ACCOUNT_ID:
        required: true


env:
  STACK_NAME_PREFIX: cicd-cfn-


permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment:
      name: ${{ github.event.pull_request.base.ref }}
    defaults:
      run:
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ACTION_ROLE }}
          aws-region: ${{ inputs.AWS_REGION }}

      - name: cli version & id
        run: |-
          aws --version
          aws sts get-caller-identity

      - name: create changeset
        if: inputs.CREATE_CHANGESET == true
        run: |-
          echo "CHANGESET<<EOF" >> $GITHUB_ENV
          aws cloudformation deploy \
            --no-execute-changeset \
            --no-fail-on-empty-changeset \
            --template-file ${{ inputs.TEMPLATE_FILE_NAME }} \
            --role-arn ${{ secrets.DEPLOY_ROLE }} \
            --s3-bucket ${{ secrets.TEMPLATE_BUCKET }} \
            --s3-prefix "${{ secrets.AWS_ACCOUNT_ID }}/${{ env.STACK_NAME_PREFIX }}${{ inputs.STACK_NAME }}-${{ github.ref_name }}" \
            --stack-name "${{ env.STACK_NAME_PREFIX }}${{ inputs.STACK_NAME }}" \
            --capabilities ${{ inputs.SAM_CAPABILITIES }} \
            --parameter-overrides StageName=${{ github.ref_name }} \
            | tee -a $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: show changeset
        if: inputs.CREATE_CHANGESET == true
        run: |-
          aws cloudformation describe-change-set \
            --change-set-name `echo "${{ env.CHANGESET }}" | sed -z 's@.*arn:aws:@arn:aws:@g'` \
            | jq ".Changes"

      - name: deploy
        if: inputs.DEPLOY == true
        run: |-
          aws cloudformation deploy \
            --no-fail-on-empty-changeset \
            --template-file ${{ inputs.TEMPLATE_FILE_NAME }} \
            --role-arn ${{ secrets.DEPLOY_ROLE }} \
            --s3-bucket ${{ secrets.TEMPLATE_BUCKET }} \
            --s3-prefix "${{ secrets.AWS_ACCOUNT_ID }}/${{ env.STACK_NAME_PREFIX }}${{ inputs.STACK_NAME }}-${{ github.ref_name }}" \
            --stack-name "${{ env.STACK_NAME_PREFIX }}${{ inputs.STACK_NAME }}" \
            --capabilities ${{ inputs.SAM_CAPABILITIES }} \
            --parameter-overrides StageName=${{ github.ref_name }}
