on:
  push:
    branches:
      - develop
    paths:
      - api/items/**
  workflow_dispatch:

env:
  API_NAME: items
  AWS_REGION: ap-northeast-1
  CAPABILITIES: CAPABILITY_IAM
  COGNITO_USER_POOL: user

  STAGE_NAME: dev
  PYTHON_VERSION: "3.9"
  STACK_NAME_PREFIX: cicd-api-
  PARAMETER_FILE: parameters.txt


permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment:
      name: develop
      # name: ${{ github.ref_name }}
    defaults:
      run:
        working-directory: api/${{ env.API_NAME }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - uses: aws-actions/setup-sam@v2

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ACTION_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: cli version & id
        run: |-
          aws --version
          sam --version
          aws sts get-caller-identity

      - name: build
        run: sam build

      - name: deploy
        env:
          COGNITO_ARN: >-
            ${{ 
              (env.COGNITO_USER_POOL == 'user' && secrets.COGNITO_ARN_USER) || 
              (env.COGNITO_USER_POOL == 'shop' && secrets.COGNITO_ARN_SHOP) 
            }}
        run: |-
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --force-upload \
            --role-arn ${{ secrets.DEPLOY_ROLE }} \
            --s3-bucket ${{ secrets.TEMPLATE_BUCKET }} \
            --stack-name "${{ env.STACK_NAME_PREFIX }}${{ env.API_NAME }}" \
            --capabilities ${{ env.CAPABILITIES }} \
            --parameter-overrides `cat ${{ env.PARAMETER_FILE }} | \
              sed -e 's@StageName=[^\f\n\r\t$]*@StageName=${{ env.STAGE_NAME }} @g' | \
              sed -e 's@CognitoArn=[^\f\n\r\t$]*@CognitoArn=${{ env.COGNITO_ARN }} @g'`
